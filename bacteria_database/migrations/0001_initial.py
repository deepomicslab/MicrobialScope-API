# Generated by Django 4.2 on 2025-05-04 08:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="MAGBacteria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id_GCA",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                (
                    "bacteria_id_GCF",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("organism_name", models.CharField(blank=True, max_length=255)),
                ("taxonomic_id", models.PositiveIntegerField(blank=True, null=True)),
                ("species", models.CharField(blank=True, max_length=255)),
                (
                    "total_sequence_length",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("gc_content", models.FloatField(blank=True, null=True)),
                ("assembly_level", models.CharField(blank=True, max_length=100)),
                (
                    "total_chromosomes",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("contig_n50", models.BigIntegerField(blank=True, null=True)),
                ("scaffold_n50", models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "MAG Bacteria Genome",
                "verbose_name_plural": "MAG Bacteria Genomes",
            },
        ),
        migrations.CreateModel(
            name="MAGBacteriaAntibioticResistance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("product", models.TextField(blank=True)),
                ("arg_database", models.CharField(blank=True, max_length=255)),
                ("cutoff", models.CharField(blank=True, max_length=255)),
                ("hsp_identifier", models.CharField(blank=True, max_length=255)),
                ("best_hit_aro", models.CharField(blank=True, max_length=255)),
                ("best_identities", models.FloatField(blank=True, null=True)),
                ("aro", models.IntegerField(blank=True, null=True)),
                ("drug_class", models.TextField(blank=True)),
                ("resistance_mechanism", models.CharField(blank=True, max_length=255)),
                ("amr_gene_family", models.CharField(blank=True, max_length=255)),
                ("antibiotic", models.TextField(blank=True)),
                ("sequence", models.TextField(blank=True)),
                ("snps_in_best_hit_aro", models.TextField(blank=True)),
                ("other_snps", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "MAG Bacteria Antibiotic Resistance Gene",
                "verbose_name_plural": "MAG Bacteria Antibiotic Resistance Genes",
            },
        ),
        migrations.CreateModel(
            name="MAGBacteriaAntiCRISPRAnnotation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("position", models.PositiveIntegerField(blank=True, null=True)),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("start", models.BigIntegerField(blank=True, null=True)),
                ("end", models.BigIntegerField(blank=True, null=True)),
                (
                    "strand",
                    models.IntegerField(choices=[(0, "+"), (1, "-")], default=0),
                ),
                ("classification", models.CharField(blank=True, max_length=255)),
                ("aa_length", models.PositiveIntegerField(blank=True, null=True)),
                ("acr_aca", models.TextField(blank=True)),
                ("mge_metadata", models.TextField(blank=True)),
                ("acr_hit_pident", models.CharField(blank=True, max_length=255)),
                ("sequence", models.TextField(blank=True)),
                ("self_target_within_5kb", models.TextField(blank=True)),
                ("self_target_outside_5kb", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "MAG Bacteria Anti-CRISPR Annotation",
                "verbose_name_plural": "MAG Bacteria Anti-CRISPR Annotations",
            },
        ),
        migrations.CreateModel(
            name="MAGBacteriaCRISPRCas",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                ("cas_id", models.CharField(blank=True, max_length=100)),
                ("cas_start", models.BigIntegerField(blank=True, null=True)),
                ("cas_end", models.BigIntegerField(blank=True, null=True)),
                ("cas_subtype", models.CharField(blank=True, max_length=255)),
                ("consensus_prediction", models.CharField(blank=True, max_length=255)),
                ("cas_genes", models.JSONField(blank=True, default=list, null=True)),
            ],
            options={
                "verbose_name": "MAG Bacteria CRISPRC CAS Annotation",
                "verbose_name_plural": "MAG Bacteria CRISPRC CAS Annotations",
            },
        ),
        migrations.CreateModel(
            name="MAGBacteriaProtein",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("orf_prediction_source", models.CharField(blank=True, max_length=255)),
                ("start", models.PositiveIntegerField(blank=True, null=True)),
                ("end", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "strand",
                    models.IntegerField(choices=[(0, "+"), (1, "-")], default=0),
                ),
                ("phase", models.PositiveIntegerField(blank=True, null=True)),
                ("product", models.TextField(blank=True)),
                (
                    "function_prediction_source",
                    models.CharField(blank=True, max_length=255),
                ),
                ("cog_category", models.CharField(blank=True, max_length=255)),
                ("description", models.TextField(blank=True)),
                ("preferred_name", models.CharField(blank=True, max_length=255)),
                ("gos", models.TextField(blank=True)),
                ("ec", models.CharField(blank=True, max_length=255)),
                ("kegg_ko", models.TextField(blank=True)),
                ("kegg_pathway", models.TextField(blank=True)),
                ("kegg_module", models.TextField(blank=True)),
                ("kegg_reaction", models.TextField(blank=True)),
                ("kegg_rclass", models.TextField(blank=True)),
                ("brite", models.TextField(blank=True)),
                ("kegg_tc", models.TextField(blank=True)),
                ("cazy", models.TextField(blank=True)),
                ("bigg_reaction", models.TextField(blank=True)),
                ("pfams", models.TextField(blank=True)),
                ("sequence", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "MAG Bacteria Protein Annotation",
                "verbose_name_plural": "MAG Bacteria Protein Annotations",
            },
        ),
        migrations.CreateModel(
            name="MAGBacteriaSecondaryMetaboliteRegion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                ("source", models.CharField(blank=True, max_length=255)),
                ("region", models.CharField(blank=True, max_length=255)),
                ("start", models.BigIntegerField(blank=True, null=True)),
                ("end", models.BigIntegerField(blank=True, null=True)),
                ("type", models.CharField(blank=True, max_length=255)),
                ("most_similar_cluster", models.TextField(blank=True)),
                ("similarity", models.CharField(blank=True, max_length=255)),
            ],
            options={
                "verbose_name": "MAG Bacteria Secondary Metabolite Region",
                "verbose_name_plural": "MAG Bacteria Secondary Metabolite Regions",
            },
        ),
        migrations.CreateModel(
            name="MAGBacteriaSignalPeptidePrediction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("source", models.CharField(blank=True, max_length=255)),
                ("prediction", models.CharField(blank=True, max_length=255)),
                ("other", models.FloatField(blank=True, null=True)),
                ("sp_sec_spi", models.FloatField(blank=True, null=True)),
                ("lipo_sec_spii", models.FloatField(blank=True, null=True)),
                ("tat_tat_spi", models.FloatField(blank=True, null=True)),
                ("tatlipo_tat_spii", models.FloatField(blank=True, null=True)),
                ("pilin_sec_spiii", models.FloatField(blank=True, null=True)),
                ("cs_position", models.CharField(blank=True, max_length=255)),
                ("cs_probability", models.FloatField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "MAG Bacteria Signal Peptide Prediction",
                "verbose_name_plural": "MAG Bacteria Signal Peptide Predictions",
            },
        ),
        migrations.CreateModel(
            name="MAGBacteriaTaxonomy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                (
                    "organism_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("taxonomy_id", models.PositiveIntegerField(blank=True, null=True)),
                ("domain", models.CharField(blank=True, max_length=255)),
                ("kingdom", models.CharField(blank=True, max_length=255)),
                ("phylum", models.CharField(blank=True, max_length=255)),
                ("class_name", models.CharField(blank=True, max_length=255)),
                ("order", models.CharField(blank=True, max_length=255)),
                ("family", models.CharField(blank=True, max_length=255)),
                ("genus", models.CharField(blank=True, max_length=255)),
                ("species", models.CharField(blank=True, max_length=255)),
            ],
            options={
                "verbose_name": "MAG Bacteria Taxonomy",
                "verbose_name_plural": "MAG Bacteria Taxonomies",
            },
        ),
        migrations.CreateModel(
            name="MAGBacteriaTransmembraneHelices",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                ("protein_id", models.CharField(blank=True, max_length=100)),
                ("length", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "predicted_tmh_count",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("source", models.CharField(blank=True, max_length=255)),
                ("expected_aas_in_tmh", models.FloatField(blank=True, null=True)),
                ("expected_first_60_aas", models.FloatField(blank=True, null=True)),
                ("total_prob_n_in", models.FloatField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "MAG Bacteria Transmembrane Helix",
                "verbose_name_plural": "MAG Bacteria Transmembrane Helices",
            },
        ),
        migrations.CreateModel(
            name="MAGBacteriaTRNA",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "trna_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("trna_type", models.CharField(blank=True, max_length=255)),
                ("start", models.PositiveIntegerField(blank=True, null=True)),
                ("end", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "strand",
                    models.IntegerField(
                        choices=[(0, "forward"), (1, "reverse")], default=0
                    ),
                ),
                ("length", models.PositiveIntegerField(blank=True, null=True)),
                ("sequence", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "MAG Bacteria tRNA Annotation",
                "verbose_name_plural": "MAG Bacteria tRNA Annotations",
            },
        ),
        migrations.CreateModel(
            name="MAGBacteriaVirulenceFactor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("vf_database", models.CharField(blank=True, max_length=255)),
                ("vfseq_id", models.CharField(blank=True, max_length=255)),
                ("identity", models.FloatField(blank=True, null=True)),
                ("e_value", models.CharField(blank=True, max_length=255)),
                ("gene_name", models.CharField(blank=True, max_length=255)),
                ("product", models.TextField(blank=True)),
                ("vf_id", models.CharField(blank=True, max_length=255)),
                ("vf_name", models.CharField(blank=True, max_length=255)),
                ("vf_fullname", models.TextField(blank=True, null=True)),
                ("vfc_id", models.CharField(blank=True, max_length=255)),
                ("vf_category", models.CharField(blank=True, max_length=255)),
                ("characteristics", models.TextField(blank=True)),
                ("structure", models.TextField(blank=True)),
                ("function", models.TextField(blank=True)),
                ("mechanism", models.TextField(blank=True)),
                ("sequence", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "MAG Bacteria Virulence Factor",
                "verbose_name_plural": "MAG Bacteria Virulence Factors",
            },
        ),
        migrations.CreateModel(
            name="UnMAGBacteria",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id_GCA",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                (
                    "bacteria_id_GCF",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("organism_name", models.CharField(blank=True, max_length=255)),
                ("taxonomic_id", models.PositiveIntegerField(blank=True, null=True)),
                ("species", models.CharField(blank=True, max_length=255)),
                (
                    "total_sequence_length",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("gc_content", models.FloatField(blank=True, null=True)),
                ("assembly_level", models.CharField(blank=True, max_length=100)),
                (
                    "total_chromosomes",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("contig_n50", models.BigIntegerField(blank=True, null=True)),
                ("scaffold_n50", models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "UnMAG Bacteria Genome",
                "verbose_name_plural": "UnMAG Bacteria Genomes",
            },
        ),
        migrations.CreateModel(
            name="UnMAGBacteriaAntibioticResistance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("product", models.TextField(blank=True)),
                ("arg_database", models.CharField(blank=True, max_length=255)),
                ("cutoff", models.CharField(blank=True, max_length=255)),
                ("hsp_identifier", models.CharField(blank=True, max_length=255)),
                ("best_hit_aro", models.CharField(blank=True, max_length=255)),
                ("best_identities", models.FloatField(blank=True, null=True)),
                ("aro", models.IntegerField(blank=True, null=True)),
                ("drug_class", models.TextField(blank=True)),
                ("resistance_mechanism", models.CharField(blank=True, max_length=255)),
                ("amr_gene_family", models.CharField(blank=True, max_length=255)),
                ("antibiotic", models.TextField(blank=True)),
                ("sequence", models.TextField(blank=True)),
                ("snps_in_best_hit_aro", models.TextField(blank=True)),
                ("other_snps", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "UnMAG Bacteria Antibiotic Resistance Gene",
                "verbose_name_plural": "UnMAG Bacteria Antibiotic Resistance Genes",
            },
        ),
        migrations.CreateModel(
            name="UnMAGBacteriaAntiCRISPRAnnotation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("position", models.PositiveIntegerField(blank=True, null=True)),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("start", models.BigIntegerField(blank=True, null=True)),
                ("end", models.BigIntegerField(blank=True, null=True)),
                (
                    "strand",
                    models.IntegerField(choices=[(0, "+"), (1, "-")], default=0),
                ),
                ("classification", models.CharField(blank=True, max_length=255)),
                ("aa_length", models.PositiveIntegerField(blank=True, null=True)),
                ("acr_aca", models.TextField(blank=True)),
                ("mge_metadata", models.TextField(blank=True)),
                ("acr_hit_pident", models.CharField(blank=True, max_length=255)),
                ("sequence", models.TextField(blank=True)),
                ("self_target_within_5kb", models.TextField(blank=True)),
                ("self_target_outside_5kb", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "UnMAG Bacteria Anti-CRISPR Annotation",
                "verbose_name_plural": "UnMAG Bacteria Anti-CRISPR Annotations",
            },
        ),
        migrations.CreateModel(
            name="UnMAGBacteriaCRISPRCas",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                ("cas_id", models.CharField(blank=True, max_length=100)),
                ("cas_start", models.BigIntegerField(blank=True, null=True)),
                ("cas_end", models.BigIntegerField(blank=True, null=True)),
                ("cas_subtype", models.CharField(blank=True, max_length=255)),
                ("consensus_prediction", models.CharField(blank=True, max_length=255)),
                ("cas_genes", models.JSONField(blank=True, default=list, null=True)),
            ],
            options={
                "verbose_name": "UnMAG Bacteria CRISPRC CAS Annotation",
                "verbose_name_plural": "UnMAG Bacteria CRISPRC CAS Annotations",
            },
        ),
        migrations.CreateModel(
            name="UnMAGBacteriaProtein",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("orf_prediction_source", models.CharField(blank=True, max_length=255)),
                ("start", models.PositiveIntegerField(blank=True, null=True)),
                ("end", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "strand",
                    models.IntegerField(choices=[(0, "+"), (1, "-")], default=0),
                ),
                ("phase", models.PositiveIntegerField(blank=True, null=True)),
                ("product", models.TextField(blank=True)),
                (
                    "function_prediction_source",
                    models.CharField(blank=True, max_length=255),
                ),
                ("cog_category", models.CharField(blank=True, max_length=255)),
                ("description", models.TextField(blank=True)),
                ("preferred_name", models.CharField(blank=True, max_length=255)),
                ("gos", models.TextField(blank=True)),
                ("ec", models.CharField(blank=True, max_length=255)),
                ("kegg_ko", models.TextField(blank=True)),
                ("kegg_pathway", models.TextField(blank=True)),
                ("kegg_module", models.TextField(blank=True)),
                ("kegg_reaction", models.TextField(blank=True)),
                ("kegg_rclass", models.TextField(blank=True)),
                ("brite", models.TextField(blank=True)),
                ("kegg_tc", models.TextField(blank=True)),
                ("cazy", models.TextField(blank=True)),
                ("bigg_reaction", models.TextField(blank=True)),
                ("pfams", models.TextField(blank=True)),
                ("sequence", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "UnMAG Bacteria Protein Annotation",
                "verbose_name_plural": "UnMAG Bacteria Protein Annotations",
            },
        ),
        migrations.CreateModel(
            name="UnMAGBacteriaSecondaryMetaboliteRegion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                ("source", models.CharField(blank=True, max_length=255)),
                ("region", models.CharField(blank=True, max_length=255)),
                ("start", models.BigIntegerField(blank=True, null=True)),
                ("end", models.BigIntegerField(blank=True, null=True)),
                ("type", models.CharField(blank=True, max_length=255)),
                ("most_similar_cluster", models.TextField(blank=True)),
                ("similarity", models.CharField(blank=True, max_length=255)),
            ],
            options={
                "verbose_name": "UnMAG Bacteria Secondary Metabolite Region",
                "verbose_name_plural": "UnMAG Bacteria Secondary Metabolite Regions",
            },
        ),
        migrations.CreateModel(
            name="UnMAGBacteriaSignalPeptidePrediction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("source", models.CharField(blank=True, max_length=255)),
                ("prediction", models.CharField(blank=True, max_length=255)),
                ("other", models.FloatField(blank=True, null=True)),
                ("sp_sec_spi", models.FloatField(blank=True, null=True)),
                ("lipo_sec_spii", models.FloatField(blank=True, null=True)),
                ("tat_tat_spi", models.FloatField(blank=True, null=True)),
                ("tatlipo_tat_spii", models.FloatField(blank=True, null=True)),
                ("pilin_sec_spiii", models.FloatField(blank=True, null=True)),
                ("cs_position", models.CharField(blank=True, max_length=255)),
                ("cs_probability", models.FloatField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "UnMAG Bacteria Signal Peptide Prediction",
                "verbose_name_plural": "UnMAG Bacteria Signal Peptide Predictions",
            },
        ),
        migrations.CreateModel(
            name="UnMAGBacteriaTaxonomy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                (
                    "organism_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("taxonomy_id", models.PositiveIntegerField(blank=True, null=True)),
                ("domain", models.CharField(blank=True, max_length=255)),
                ("kingdom", models.CharField(blank=True, max_length=255)),
                ("phylum", models.CharField(blank=True, max_length=255)),
                ("class_name", models.CharField(blank=True, max_length=255)),
                ("order", models.CharField(blank=True, max_length=255)),
                ("family", models.CharField(blank=True, max_length=255)),
                ("genus", models.CharField(blank=True, max_length=255)),
                ("species", models.CharField(blank=True, max_length=255)),
            ],
            options={
                "verbose_name": "UnMAG Bacteria Taxonomy",
                "verbose_name_plural": "UnMAG Bacteria Taxonomies",
            },
        ),
        migrations.CreateModel(
            name="UnMAGBacteriaTransmembraneHelices",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                ("protein_id", models.CharField(blank=True, max_length=100)),
                ("length", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "predicted_tmh_count",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("source", models.CharField(blank=True, max_length=255)),
                ("expected_aas_in_tmh", models.FloatField(blank=True, null=True)),
                ("expected_first_60_aas", models.FloatField(blank=True, null=True)),
                ("total_prob_n_in", models.FloatField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "UnMAG Bacteria Transmembrane Helix",
                "verbose_name_plural": "UnMAG Bacteria Transmembrane Helices",
            },
        ),
        migrations.CreateModel(
            name="UnMAGBacteriaTRNA",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "trna_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("trna_type", models.CharField(blank=True, max_length=255)),
                ("start", models.PositiveIntegerField(blank=True, null=True)),
                ("end", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "strand",
                    models.IntegerField(
                        choices=[(0, "forward"), (1, "reverse")], default=0
                    ),
                ),
                ("length", models.PositiveIntegerField(blank=True, null=True)),
                ("sequence", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "UnMAG Bacteria tRNA Annotation",
                "verbose_name_plural": "UnMAG Bacteria tRNA Annotations",
            },
        ),
        migrations.CreateModel(
            name="UnMAGBacteriaVirulenceFactor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bacteria_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("vf_database", models.CharField(blank=True, max_length=255)),
                ("vfseq_id", models.CharField(blank=True, max_length=255)),
                ("identity", models.FloatField(blank=True, null=True)),
                ("e_value", models.CharField(blank=True, max_length=255)),
                ("gene_name", models.CharField(blank=True, max_length=255)),
                ("product", models.TextField(blank=True)),
                ("vf_id", models.CharField(blank=True, max_length=255)),
                ("vf_name", models.CharField(blank=True, max_length=255)),
                ("vf_fullname", models.TextField(blank=True, null=True)),
                ("vfc_id", models.CharField(blank=True, max_length=255)),
                ("vf_category", models.CharField(blank=True, max_length=255)),
                ("characteristics", models.TextField(blank=True)),
                ("structure", models.TextField(blank=True)),
                ("function", models.TextField(blank=True)),
                ("mechanism", models.TextField(blank=True)),
                ("sequence", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "UnMAG Bacteria Virulence Factor",
                "verbose_name_plural": "UnMAG Bacteria Virulence Factors",
            },
        ),
        migrations.CreateModel(
            name="UnMAGBacteriaHelices",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.CharField(blank=True, max_length=255)),
                ("start", models.IntegerField(blank=True, null=True)),
                ("end", models.IntegerField(blank=True, null=True)),
                (
                    "tmh",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="helices",
                        to="bacteria_database.unmagbacteriatransmembranehelices",
                    ),
                ),
            ],
            options={
                "verbose_name": "UnMAG Bacteria Helix",
                "verbose_name_plural": "UnMAG Bacteria Helices",
            },
        ),
        migrations.CreateModel(
            name="UnMAGBacteriaCRISPR",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "crispr_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("crispr_start", models.BigIntegerField(blank=True, null=True)),
                ("crispr_end", models.BigIntegerField(blank=True, null=True)),
                ("crispr_subtype", models.CharField(blank=True, max_length=255)),
                ("repeat_sequence", models.TextField(blank=True)),
                (
                    "cas",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="CRISPRs",
                        to="bacteria_database.unmagbacteriacrisprcas",
                    ),
                ),
            ],
            options={
                "verbose_name": "UnMAG Bacteria CRISPR Annotation",
                "verbose_name_plural": "UnMAG Bacteria CRISPR Annotations",
            },
        ),
        migrations.CreateModel(
            name="MAGBacteriaHelices",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.CharField(blank=True, max_length=255)),
                ("start", models.IntegerField(blank=True, null=True)),
                ("end", models.IntegerField(blank=True, null=True)),
                (
                    "tmh",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="helices",
                        to="bacteria_database.magbacteriatransmembranehelices",
                    ),
                ),
            ],
            options={
                "verbose_name": "MAG Bacteria Helix",
                "verbose_name_plural": "MAG Bacteria Helices",
            },
        ),
        migrations.CreateModel(
            name="MAGBacteriaCRISPR",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "crispr_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("crispr_start", models.BigIntegerField(blank=True, null=True)),
                ("crispr_end", models.BigIntegerField(blank=True, null=True)),
                ("crispr_subtype", models.CharField(blank=True, max_length=255)),
                ("repeat_sequence", models.TextField(blank=True)),
                (
                    "cas",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="CRISPRs",
                        to="bacteria_database.magbacteriacrisprcas",
                    ),
                ),
            ],
            options={
                "verbose_name": "MAG Bacteria CRISPR Annotation",
                "verbose_name_plural": "MAG Bacteria CRISPR Annotations",
            },
        ),
    ]
