# Generated by Django 4.2 on 2025-05-04 08:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="MAGFungi",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id_GCA",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                (
                    "fungi_id_GCF",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("organism_name", models.CharField(blank=True, max_length=255)),
                ("taxonomic_id", models.PositiveIntegerField(blank=True, null=True)),
                ("species", models.CharField(blank=True, max_length=255)),
                (
                    "total_sequence_length",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("gc_content", models.FloatField(blank=True, null=True)),
                ("assembly_level", models.CharField(blank=True, max_length=100)),
                (
                    "total_chromosomes",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("contig_n50", models.BigIntegerField(blank=True, null=True)),
                ("scaffold_n50", models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "MAG Fungi Genome",
                "verbose_name_plural": "MAG Fungi Genomes",
            },
        ),
        migrations.CreateModel(
            name="MAGFungiAntibioticResistance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("product", models.TextField(blank=True)),
                ("arg_database", models.CharField(blank=True, max_length=255)),
                ("cutoff", models.CharField(blank=True, max_length=255)),
                ("hsp_identifier", models.CharField(blank=True, max_length=255)),
                ("best_hit_aro", models.CharField(blank=True, max_length=255)),
                ("best_identities", models.FloatField(blank=True, null=True)),
                ("aro", models.IntegerField(blank=True, null=True)),
                ("drug_class", models.TextField(blank=True)),
                ("resistance_mechanism", models.CharField(blank=True, max_length=255)),
                ("amr_gene_family", models.CharField(blank=True, max_length=255)),
                ("antibiotic", models.TextField(blank=True)),
                ("sequence", models.TextField(blank=True)),
                ("snps_in_best_hit_aro", models.TextField(blank=True)),
                ("other_snps", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "MAG Fungi Antibiotic Resistance Gene",
                "verbose_name_plural": "MAG Fungi Antibiotic Resistance Genes",
            },
        ),
        migrations.CreateModel(
            name="MAGFungiProtein",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("orf_prediction_source", models.CharField(blank=True, max_length=255)),
                ("start", models.PositiveIntegerField(blank=True, null=True)),
                ("end", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "strand",
                    models.IntegerField(choices=[(0, "+"), (1, "-")], default=0),
                ),
                ("phase", models.PositiveIntegerField(blank=True, null=True)),
                ("product", models.TextField(blank=True)),
                (
                    "function_prediction_source",
                    models.CharField(blank=True, max_length=255),
                ),
                ("cog_category", models.CharField(blank=True, max_length=255)),
                ("description", models.TextField(blank=True)),
                ("preferred_name", models.CharField(blank=True, max_length=255)),
                ("gos", models.TextField(blank=True)),
                ("ec", models.CharField(blank=True, max_length=255)),
                ("kegg_ko", models.TextField(blank=True)),
                ("kegg_pathway", models.TextField(blank=True)),
                ("kegg_module", models.TextField(blank=True)),
                ("kegg_reaction", models.TextField(blank=True)),
                ("kegg_rclass", models.TextField(blank=True)),
                ("brite", models.TextField(blank=True)),
                ("kegg_tc", models.TextField(blank=True)),
                ("cazy", models.TextField(blank=True)),
                ("bigg_reaction", models.TextField(blank=True)),
                ("pfams", models.TextField(blank=True)),
                ("sequence", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "MAG Fungi Protein Annotation",
                "verbose_name_plural": "MAG Fungi Protein Annotations",
            },
        ),
        migrations.CreateModel(
            name="MAGFungiSecondaryMetaboliteRegion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                ("source", models.CharField(blank=True, max_length=255)),
                ("region", models.CharField(blank=True, max_length=255)),
                ("start", models.BigIntegerField(blank=True, null=True)),
                ("end", models.BigIntegerField(blank=True, null=True)),
                ("type", models.CharField(blank=True, max_length=255)),
                ("most_similar_cluster", models.TextField(blank=True)),
                ("similarity", models.CharField(blank=True, max_length=255)),
            ],
            options={
                "verbose_name": "MAG Fungi Secondary Metabolite Region",
                "verbose_name_plural": "MAG Fungi Secondary Metabolite Regions",
            },
        ),
        migrations.CreateModel(
            name="MAGFungiSignalPeptidePrediction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("source", models.CharField(blank=True, max_length=255)),
                ("prediction", models.CharField(blank=True, max_length=255)),
                ("other", models.FloatField(blank=True, null=True)),
                ("sp_sec_spi", models.FloatField(blank=True, null=True)),
                ("lipo_sec_spii", models.FloatField(blank=True, null=True)),
                ("tat_tat_spi", models.FloatField(blank=True, null=True)),
                ("tatlipo_tat_spii", models.FloatField(blank=True, null=True)),
                ("pilin_sec_spiii", models.FloatField(blank=True, null=True)),
                ("cs_position", models.CharField(blank=True, max_length=255)),
                ("cs_probability", models.FloatField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "MAG Fungi Signal Peptide Prediction",
                "verbose_name_plural": "MAG Fungi Signal Peptide Predictions",
            },
        ),
        migrations.CreateModel(
            name="MAGFungiTaxonomy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                (
                    "organism_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("taxonomy_id", models.PositiveIntegerField(blank=True, null=True)),
                ("domain", models.CharField(blank=True, max_length=255)),
                ("kingdom", models.CharField(blank=True, max_length=255)),
                ("phylum", models.CharField(blank=True, max_length=255)),
                ("class_name", models.CharField(blank=True, max_length=255)),
                ("order", models.CharField(blank=True, max_length=255)),
                ("family", models.CharField(blank=True, max_length=255)),
                ("genus", models.CharField(blank=True, max_length=255)),
                ("species", models.CharField(blank=True, max_length=255)),
            ],
            options={
                "verbose_name": "MAG Fungi Taxonomy",
                "verbose_name_plural": "MAG Fungi Taxonomies",
            },
        ),
        migrations.CreateModel(
            name="MAGFungiTransmembraneHelices",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                ("protein_id", models.CharField(blank=True, max_length=100)),
                ("length", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "predicted_tmh_count",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("source", models.CharField(blank=True, max_length=255)),
                ("expected_aas_in_tmh", models.FloatField(blank=True, null=True)),
                ("expected_first_60_aas", models.FloatField(blank=True, null=True)),
                ("total_prob_n_in", models.FloatField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "MAG Fungi Transmembrane Helix",
                "verbose_name_plural": "MAG Fungi Transmembrane Helices",
            },
        ),
        migrations.CreateModel(
            name="MAGFungiTRNA",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "trna_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("trna_type", models.CharField(blank=True, max_length=255)),
                ("start", models.PositiveIntegerField(blank=True, null=True)),
                ("end", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "strand",
                    models.IntegerField(
                        choices=[(0, "forward"), (1, "reverse")], default=0
                    ),
                ),
                ("length", models.PositiveIntegerField(blank=True, null=True)),
                ("sequence", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "MAG Fungi tRNA Annotation",
                "verbose_name_plural": "MAG Fungi tRNA Annotations",
            },
        ),
        migrations.CreateModel(
            name="MAGFungiVirulenceFactor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("vf_database", models.CharField(blank=True, max_length=255)),
                ("uni_prot_id", models.CharField(blank=True, max_length=255)),
                ("identity", models.FloatField(blank=True, null=True)),
                ("e_value", models.CharField(blank=True, max_length=255)),
                ("gene_symbol", models.CharField(blank=True, max_length=255)),
                ("organism", models.CharField(blank=True, max_length=255)),
                ("taxonomy_id", models.PositiveIntegerField(blank=True, null=True)),
                ("disease_host", models.TextField(blank=True)),
                ("disease", models.TextField(blank=True)),
                ("disease_key", models.CharField(blank=True, max_length=255)),
                ("sequence", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "MAG Fungi Virulence Factor",
                "verbose_name_plural": "MAG Fungi Virulence Factors",
            },
        ),
        migrations.CreateModel(
            name="UnMAGFungi",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id_GCA",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                (
                    "fungi_id_GCF",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("organism_name", models.CharField(blank=True, max_length=255)),
                ("taxonomic_id", models.PositiveIntegerField(blank=True, null=True)),
                ("species", models.CharField(blank=True, max_length=255)),
                (
                    "total_sequence_length",
                    models.BigIntegerField(blank=True, null=True),
                ),
                ("gc_content", models.FloatField(blank=True, null=True)),
                ("assembly_level", models.CharField(blank=True, max_length=100)),
                (
                    "total_chromosomes",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("contig_n50", models.BigIntegerField(blank=True, null=True)),
                ("scaffold_n50", models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "UnMAG Fungi Genome",
                "verbose_name_plural": "UnMAG Fungi Genomes",
            },
        ),
        migrations.CreateModel(
            name="UnMAGFungiAntibioticResistance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("product", models.TextField(blank=True)),
                ("arg_database", models.CharField(blank=True, max_length=255)),
                ("cutoff", models.CharField(blank=True, max_length=255)),
                ("hsp_identifier", models.CharField(blank=True, max_length=255)),
                ("best_hit_aro", models.CharField(blank=True, max_length=255)),
                ("best_identities", models.FloatField(blank=True, null=True)),
                ("aro", models.IntegerField(blank=True, null=True)),
                ("drug_class", models.TextField(blank=True)),
                ("resistance_mechanism", models.CharField(blank=True, max_length=255)),
                ("amr_gene_family", models.CharField(blank=True, max_length=255)),
                ("antibiotic", models.TextField(blank=True)),
                ("sequence", models.TextField(blank=True)),
                ("snps_in_best_hit_aro", models.TextField(blank=True)),
                ("other_snps", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "UnMAG Fungi Antibiotic Resistance Gene",
                "verbose_name_plural": "UnMAG Fungi Antibiotic Resistance Genes",
            },
        ),
        migrations.CreateModel(
            name="UnMAGFungiProtein",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("orf_prediction_source", models.CharField(blank=True, max_length=255)),
                ("start", models.PositiveIntegerField(blank=True, null=True)),
                ("end", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "strand",
                    models.IntegerField(choices=[(0, "+"), (1, "-")], default=0),
                ),
                ("phase", models.PositiveIntegerField(blank=True, null=True)),
                ("product", models.TextField(blank=True)),
                (
                    "function_prediction_source",
                    models.CharField(blank=True, max_length=255),
                ),
                ("cog_category", models.CharField(blank=True, max_length=255)),
                ("description", models.TextField(blank=True)),
                ("preferred_name", models.CharField(blank=True, max_length=255)),
                ("gos", models.TextField(blank=True)),
                ("ec", models.CharField(blank=True, max_length=255)),
                ("kegg_ko", models.TextField(blank=True)),
                ("kegg_pathway", models.TextField(blank=True)),
                ("kegg_module", models.TextField(blank=True)),
                ("kegg_reaction", models.TextField(blank=True)),
                ("kegg_rclass", models.TextField(blank=True)),
                ("brite", models.TextField(blank=True)),
                ("kegg_tc", models.TextField(blank=True)),
                ("cazy", models.TextField(blank=True)),
                ("bigg_reaction", models.TextField(blank=True)),
                ("pfams", models.TextField(blank=True)),
                ("sequence", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "UnMAG Fungi Protein Annotation",
                "verbose_name_plural": "UnMAG Fungi Protein Annotations",
            },
        ),
        migrations.CreateModel(
            name="UnMAGFungiSecondaryMetaboliteRegion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                ("source", models.CharField(blank=True, max_length=255)),
                ("region", models.CharField(blank=True, max_length=255)),
                ("start", models.BigIntegerField(blank=True, null=True)),
                ("end", models.BigIntegerField(blank=True, null=True)),
                ("type", models.CharField(blank=True, max_length=255)),
                ("most_similar_cluster", models.TextField(blank=True)),
                ("similarity", models.CharField(blank=True, max_length=255)),
            ],
            options={
                "verbose_name": "UnMAG Fungi Secondary Metabolite Region",
                "verbose_name_plural": "UnMAG Fungi Secondary Metabolite Regions",
            },
        ),
        migrations.CreateModel(
            name="UnMAGFungiSignalPeptidePrediction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("source", models.CharField(blank=True, max_length=255)),
                ("prediction", models.CharField(blank=True, max_length=255)),
                ("other", models.FloatField(blank=True, null=True)),
                ("sp_sec_spi", models.FloatField(blank=True, null=True)),
                ("lipo_sec_spii", models.FloatField(blank=True, null=True)),
                ("tat_tat_spi", models.FloatField(blank=True, null=True)),
                ("tatlipo_tat_spii", models.FloatField(blank=True, null=True)),
                ("pilin_sec_spiii", models.FloatField(blank=True, null=True)),
                ("cs_position", models.CharField(blank=True, max_length=255)),
                ("cs_probability", models.FloatField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "UnMAG Fungi Signal Peptide Prediction",
                "verbose_name_plural": "UnMAG Fungi Signal Peptide Predictions",
            },
        ),
        migrations.CreateModel(
            name="UnMAGFungiTaxonomy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                (
                    "organism_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("taxonomy_id", models.PositiveIntegerField(blank=True, null=True)),
                ("domain", models.CharField(blank=True, max_length=255)),
                ("kingdom", models.CharField(blank=True, max_length=255)),
                ("phylum", models.CharField(blank=True, max_length=255)),
                ("class_name", models.CharField(blank=True, max_length=255)),
                ("order", models.CharField(blank=True, max_length=255)),
                ("family", models.CharField(blank=True, max_length=255)),
                ("genus", models.CharField(blank=True, max_length=255)),
                ("species", models.CharField(blank=True, max_length=255)),
            ],
            options={
                "verbose_name": "UnMAG Fungi Taxonomy",
                "verbose_name_plural": "UnMAG Fungi Taxonomies",
            },
        ),
        migrations.CreateModel(
            name="UnMAGFungiTransmembraneHelices",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                ("protein_id", models.CharField(blank=True, max_length=100)),
                ("length", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "predicted_tmh_count",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("source", models.CharField(blank=True, max_length=255)),
                ("expected_aas_in_tmh", models.FloatField(blank=True, null=True)),
                ("expected_first_60_aas", models.FloatField(blank=True, null=True)),
                ("total_prob_n_in", models.FloatField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "UnMAG Fungi Transmembrane Helix",
                "verbose_name_plural": "UnMAG Fungi Transmembrane Helices",
            },
        ),
        migrations.CreateModel(
            name="UnMAGFungiTRNA",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "trna_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("trna_type", models.CharField(blank=True, max_length=255)),
                ("start", models.PositiveIntegerField(blank=True, null=True)),
                ("end", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "strand",
                    models.IntegerField(
                        choices=[(0, "forward"), (1, "reverse")], default=0
                    ),
                ),
                ("length", models.PositiveIntegerField(blank=True, null=True)),
                ("sequence", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "UnMAG Fungi tRNA Annotation",
                "verbose_name_plural": "UnMAG Fungi tRNA Annotations",
            },
        ),
        migrations.CreateModel(
            name="UnMAGFungiVirulenceFactor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fungi_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("contig_id", models.CharField(blank=True, max_length=100)),
                (
                    "protein_id",
                    models.CharField(blank=True, db_index=True, max_length=100),
                ),
                ("vf_database", models.CharField(blank=True, max_length=255)),
                ("uni_prot_id", models.CharField(blank=True, max_length=255)),
                ("identity", models.FloatField(blank=True, null=True)),
                ("e_value", models.CharField(blank=True, max_length=255)),
                ("gene_symbol", models.CharField(blank=True, max_length=255)),
                ("organism", models.CharField(blank=True, max_length=255)),
                ("taxonomy_id", models.PositiveIntegerField(blank=True, null=True)),
                ("disease_host", models.TextField(blank=True)),
                ("disease", models.TextField(blank=True)),
                ("disease_key", models.CharField(blank=True, max_length=255)),
                ("sequence", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "UnMAG Fungi Virulence Factor",
                "verbose_name_plural": "UnMAG Fungi Virulence Factors",
            },
        ),
        migrations.CreateModel(
            name="UnMAGFungiHelices",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.CharField(blank=True, max_length=255)),
                ("start", models.IntegerField(blank=True, null=True)),
                ("end", models.IntegerField(blank=True, null=True)),
                (
                    "tmh",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="helices",
                        to="fungi_database.unmagfungitransmembranehelices",
                    ),
                ),
            ],
            options={
                "verbose_name": "UnMAG Fungi Helix",
                "verbose_name_plural": "UnMAG Fungi Helices",
            },
        ),
        migrations.CreateModel(
            name="MAGFungiHelices",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.CharField(blank=True, max_length=255)),
                ("start", models.IntegerField(blank=True, null=True)),
                ("end", models.IntegerField(blank=True, null=True)),
                (
                    "tmh",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="helices",
                        to="fungi_database.magfungitransmembranehelices",
                    ),
                ),
            ],
            options={
                "verbose_name": "MAG Fungi Helix",
                "verbose_name_plural": "MAG Fungi Helices",
            },
        ),
    ]
